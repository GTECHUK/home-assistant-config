substitutions:
  devicename: m5cameraf
  upper_devicename: M5CameraF

esphome:
  name: $devicename
  platform: ESP32
  board: m5stack-core-esp32

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

logger:

api:

ota:

mqtt:
  broker: 192.168.1.100
  discovery: false
  on_json_message:
    topic: ${devicename}/transmit_lg        # Examples of json payload : { "data": 551527260, "nbits": 32 }
    then:                                   #                            { "data": 551527260 }
      - remote_transmitter.transmit_lg:
          data: !lambda |-
            uint32_t data = 0;
            if (x.containsKey("data"))
              data = x["data"];
            return data;
          nbits: !lambda |-
            uint8_t nbits = 32;
            if (x.containsKey("nbits"))
              nbits = x["nbits"];
            return nbits;
          
# Grove IR Transmitter
remote_transmitter:
  pin:
    number: GPIO4         # GPIO32 on M5StickC
  carrier_duty_percent: 50%

# Grove IR Receiver
remote_receiver:
  pin:
    number: GPIO13        # GPIO33 on M5StickC
    inverted: true
  dump: all

sensor:
  - platform: wifi_signal
    name: ${upper_devicename} WiFi Signal
  - platform: uptime
    name: ${upper_devicename} Uptime

switch:
  - platform: restart
    name: ${upper_devicename} Restart
  - platform: gpio
    pin:
      number: GPIO14
      inverted: true
    name: ${upper_devicename} Led
    id: led1

esp32_camera:
  external_clock:
    pin: GPIO27
    frequency: 20MHz
  i2c_pins:
    sda: GPIO22
    scl: GPIO23
  data_pins: [GPIO32, GPIO35, GPIO34, GPIO5, GPIO39, GPIO18, GPIO36, GPIO19]
  vsync_pin: GPIO25
  href_pin: GPIO26
  pixel_clock_pin: GPIO21
  reset_pin: GPIO15
  # Image settings
  name: ${upper_devicename}
  resolution: 800x600
  max_framerate: 2 fps
  idle_framerate: 0.1 fps
